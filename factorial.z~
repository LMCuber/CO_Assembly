.data
	welcome_txt:  .asciz "\n\tWelcome to factorial in assembly!\n"  # blue text
	num_txt:	  .asciz "\tEnter number to factorialize: "
	input_format: .asciz "%ld"

	num: .quad 0

.text

flush:
	enter $0, $0
	xor %rdi, %rdi
	call fflush
	leave
	ret

.globl main
main:
	# welcome text
	enter $0, $0

	leaq welcome_txt(%rip), %rdi
	call printf
	call flush

	leaq num_txt(%rip), %rdi
	call printf
	call flush

	leaq input_format(%rip), %rdi
	leaq num(%rip), %rsi
	call scanf
  
	#mov num(%rip), %rdi
	mov $1, %rdi
	call factorial

	# finish
	mov $0, %rdi
	call exit

	leave
	ret

factorial:
	enter $0, $0

factorial_recursive:
	#leaq num_txt(%rip), %rdi
	#call printf

	cmp $1, %rdi
	jle base_case

	#mov %rdi, %rcx
	#sub $1, %rdi
	#call factorial_recursive

	#imul %rdi, %rax

base_case:
	mov $1, %rax

factorial_exit:
	leave
	ret

